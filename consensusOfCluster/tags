!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCEPT_RETRANSMIT	Consensus.py	/^ACCEPT_RETRANSMIT = 1.0$/;"	v
Accept	Consensus.py	/^Accept = namedtuple('Accept', ['slot', 'ballot_num', 'proposal'])$/;"	v
Accepted	Consensus.py	/^Accepted = namedtuple('Accepted', ['slot', 'ballot_num'])$/;"	v
Accepter	Consensus.py	/^class Accepter(Role):$/;"	c
Accepting	Consensus.py	/^Accepting = namedtuple('Accepting', ['leader'])$/;"	v
Active	Consensus.py	/^Active = namedtuple('Active', [])$/;"	v
Adopted	Consensus.py	/^Adopted = namedtuple('Adopted', ['ballot_num', 'accepted_proposals'])$/;"	v
Ballot	Consensus.py	/^Ballot = namedtuple('Ballot', ['n', 'leader'])$/;"	v
CATCHUP_INTERVAL	Consensus.py	/^CATCHUP_INTERVAL = 0.6$/;"	v
Decided	Consensus.py	/^Decided = namedtuple('Decided', ['slot'])$/;"	v
Decision	Consensus.py	/^Decision = namedtuple('Decision', ['slot', 'proposal'])$/;"	v
INVOKE_RETRANSMIT	Consensus.py	/^INVOKE_RETRANSMIT = 0.5$/;"	v
Invoke	Consensus.py	/^Invoke = namedtuple('Invoke', ['caller', 'client_id', 'input_value'])$/;"	v
Invoked	Consensus.py	/^Invoked = namedtuple('Invoked', ['client_id', 'output'])$/;"	v
JOIN_RETRANSMIT	Consensus.py	/^JOIN_RETRANSMIT = 0.7$/;"	v
Join	Consensus.py	/^Join = namedtuple('Join', [])$/;"	v
LEADER_TIMEOUT	Consensus.py	/^LEADER_TIMEOUT = 1.0$/;"	v
Leader	Consensus.py	/^class Leader(Role):$/;"	c
NOOP_PROPOSAL	Consensus.py	/^NOOP_PROPOSAL = Proposal(None, None, None)  # no-op to fill otherwise empty slots$/;"	v
NULL_BALLOT	Consensus.py	/^NULL_BALLOT = Ballot(-1, -1)  # sorts before all real ballots$/;"	v
Node	Consensus.py	/^class Node(object):$/;"	c
PREPARE_RETRANSMIT	Consensus.py	/^PREPARE_RETRANSMIT = 1.0$/;"	v
Preempted	Consensus.py	/^Preempted = namedtuple('Preempted', ['slot', 'preempted_by'])$/;"	v
Prepare	Consensus.py	/^Prepare = namedtuple('Prepare', ['ballot_num'])$/;"	v
Promise	Consensus.py	/^Promise = namedtuple('Promise', ['ballot_num', 'accepted_proposals'])$/;"	v
Proposal	Consensus.py	/^Proposal = namedtuple('Proposal', ['caller', 'client_id', 'input'])$/;"	v
Propose	Consensus.py	/^Propose = namedtuple('Propose', ['slot', 'proposal'])$/;"	v
Replica	Consensus.py	/^class Replica(Role):$/;"	c
Role	Consensus.py	/^class Role(object):$/;"	c
Welcome	Consensus.py	/^Welcome = namedtuple('Welcome', ['state', 'slot', 'decisions'])$/;"	v
__init	Consensus.py	/^    def __init(self, network, address):$/;"	m	class:Node	file:
__init__	Consensus.py	/^    def __init__(self, node):$/;"	m	class:Accepter
__init__	Consensus.py	/^    def __init__(self, node):$/;"	m	class:Role
__init__	Consensus.py	/^    def __init__(self, node, execute_fn, state, slot, decisions, peers):$/;"	m	class:Replica
__init__	Consensus.py	/^    def __init__(self, node, peers, commander_cls=Commander, scout_cls=Scout):$/;"	m	class:Leader
commit	Consensus.py	/^    def  commit(self, slot, proposal):$/;"	m	class:Replica
do_Accept	Consensus.py	/^    def do_Accept(self, sender, ballot_num, slot, proposal):$/;"	m	class:Accepter
do_Acceptint	Consensus.py	/^    def do_Acceptint(self, sender, leader):$/;"	m	class:Replica
do_Active	Consensus.py	/^    def do_Active(self, sender):$/;"	m	class:Replica
do_Adoptd	Consensus.py	/^    def do_Adoptd(self, sender, ballot_num, accepted_proposals):$/;"	m	class:Leader
do_Adopted	Consensus.py	/^    def do_Adopted(self, sender, ballot_num, accepted_proposals):$/;"	m	class:Replica
do_Decision	Consensus.py	/^    def do_Decision(self, sender, slot, proposal):$/;"	m	class:Replica
do_Inovke	Consensus.py	/^    def do_Inovke(self, sender, caller, client_id, input_value):$/;"	m	class:Replica
do_Preempted	Consensus.py	/^    def do_Preempted(self, sender, slot, preempted_by):$/;"	m	class:Leader
do_Prepare	Consensus.py	/^    def do_Prepare(self, sender, ballot_num):$/;"	m	class:Accepter
do_Propose	Consensus.py	/^    def do_Propose(self, sender, slot, proposal):$/;"	m	class:Leader
do_join	Consensus.py	/^    def do_join(self, sender):$/;"	m	class:Replica
leader_alive	Consensus.py	/^    def leader_alive(self):$/;"	m	class:Replica
propose	Consensus.py	/^    def propose(self, proposal, slot=None):$/;"	m	class:Replica
receive	Consensus.py	/^    def receive(self, sender, message):$/;"	m	class:Node
register	Consensus.py	/^    def register(self, role):$/;"	m	class:Node
reset_leader	Consensus.py	/^        def reset_leader():$/;"	f	function:Replica.leader_alive
set_timer	Consensus.py	/^    def set_timer(self, second, callbcak):$/;"	m	class:Role
spawn_commander	Consensus.py	/^    def spawn_commander(self, ballot_num, slot):$/;"	m	class:Leader
spawn_scout	Consensus.py	/^    def spawn_scout(self):$/;"	m	class:Leader
start	Consensus.py	/^    def start(self):$/;"	m	class:Leader
stop	Consensus.py	/^    def stop(self):$/;"	m	class:Role
unique_id	Consensus.py	/^    unique_id=itertools.count()$/;"	v	class:Node
unregister	Consensus.py	/^    def unregister(self, role):$/;"	m	class:Node
